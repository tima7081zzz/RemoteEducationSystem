@using Domain.Enums
@model courseWork.Models.ViewModels.ProfessorIndexViewModel

<a asp-action="Activity" asp-controller="Professor">Rate Activity</a>

<h2>Add group</h2>
@using (Html.BeginForm("AddGroup", "Professor", FormMethod.Post))
{
    <div class="input-group">
        @Html.TextBoxFor(model => model.CreateGroupName, new {@class = "form-control"})
        <div class="input-group-append">
            <button type="submit" class="btn btn-success">Add</button>
        </div>
    </div>
    @Html.ValidationSummary()
}

<h2> Groups </h2>
<table class="table table-striped table-bordered">
    <thead>
    <tr>
        <th scope="col">Name</th>
        <th scope="col">Students</th>
        <th scope="col">Subjects</th>
        <th scope="col">Select Student</th>
        <th scope="col">Select Subject</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var group in Model!.Groups)
    {
        <tr>
            <th>
                @group.Name
            </th>
            <td>
                @foreach (var name in group.StudentsNames)
                {
                    <span>@name</span>
                }
            </td>
            <td>
                @foreach (var name in group.SubjectNames)
                {
                    <span>@name</span>
                }
            </td>
            <td>
                @using (Html.BeginForm("AddStudentToGroup", "Professor", FormMethod.Post))
                {
                    <div class="input-group">
                        @Html.Hidden("AddStudentToGroupModel.GroupId", group.Id)
                        @Html.DropDownListFor(model => model.AddStudentToGroupModel.StudentId, Model.Students.
                            Where(x => !group.StudentsNames.Contains(x.Fullname))
                            .Select(x => new SelectListItem(x.Fullname, x.Id.ToString())))
                        <div class="input-group-append">
                            <button type="submit" class="btn btn-success">Add</button>
                        </div>
                    </div>
                    @Html.ValidationSummary()
                }
            </td>
            <td>
                @using (Html.BeginForm("AddSubjectToGroup", "Professor", FormMethod.Post))
                {
                    <div class="input-group">
                        @Html.Hidden("AddSubjectToGroupModel.GroupId", group.Id)
                        @Html.DropDownListFor(model => model.AddSubjectToGroupModel.SubjectId, Model.Subjects.
                            Where(x => !group.SubjectNames.Contains(x.Name))
                            .Select(x => new SelectListItem(x.Name, x.Id.ToString())))
                        <div class="input-group-append">
                            <button type="submit" class="btn btn-success">Add</button>
                        </div>
                    </div>
                    @Html.ValidationSummary()
                }
            </td>
        </tr>
    }
    </tbody>
</table>

<h2>Add Activity</h2>
@using (Html.BeginForm("AddActivityToSubject", "Professor", FormMethod.Post))
{
    <div class="form-group">
        <h4>Name:</h4>
        @Html.TextBoxFor(model => model.CreateActivityModel.Name, new {@class = "form-control"})
        <h4>MaxGrade:</h4>
        <input type="number" id="typeNumber" class="form-control" asp-for="CreateActivityModel.MaxGrade"/>
        <h4>Type:</h4>
        @Html.DropDownListFor(model => model.CreateActivityModel.Type, @Html.GetEnumSelectList(typeof(EActivityType)))
        <h4>Subject:</h4>
        @Html.DropDownListFor(model => model.CreateActivityModel.SubjectId, Model.Subjects.Select(x => new SelectListItem(x.Name, x.Id.ToString())))
        <div class="input-group-append">
            <button type="submit" class="btn btn-success">Add</button>
        </div>
    </div>
    @Html.ValidationSummary()
}

<h2>Add Resource</h2>
@using (Html.BeginForm("AddResourceToSubject", "Professor", FormMethod.Post))
{
    <div class="form-group">
        <h4>Name:</h4>
        @Html.TextBoxFor(model => model.CreateResourceModel.Name, new {@class = "form-control"})
        <h4>Type:</h4>
        @Html.DropDownListFor(model => model.CreateResourceModel.Type, @Html.GetEnumSelectList(typeof(EResourceType)))
        <h4>Subject:</h4>
        @Html.DropDownListFor(model => model.CreateResourceModel.SubjectId, Model.Subjects.Select(x => new SelectListItem(x.Name, x.Id.ToString())))
        <div class="input-group-append">
            <button type="submit" class="btn btn-success">Add</button>
        </div>
    </div>
    @Html.ValidationSummary()
}

